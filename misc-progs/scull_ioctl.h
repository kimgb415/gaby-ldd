/*
 * Ioctl definitions
 */

/* Use 'k' as magic number */
#define SCULL_IOC_MAGIC  'k'

enum SCULL_IOC_ENUM {
	SCULL_IOCRESET_IDX,
	SCULL_IOCSQUANTUM_IDX,
	SCULL_IOCSQSET_IDX,
	SCULL_IOCTQUANTUM_IDX,
	SCULL_IOCTQSET_IDX,
	SCULL_IOCGQUANTUM_IDX,
	SCULL_IOCGQSET_IDX,
	SCULL_IOCQQUANTUM_IDX,
	SCULL_IOCQQSET_IDX,
	SCULL_IOCXQUANTUM_IDX,
	SCULL_IOCXQSET_IDX,
	SCULL_IOCHQUANTUM_IDX,
	SCULL_IOCHQSET_IDX,

	SCULL_IOC_MAXNR
};

/* Please use a different 8-bit number in your code */

#define SCULL_IOCRESET    _IO(SCULL_IOC_MAGIC, SCULL_IOCRESET_IDX)

/*
 * S means "Set" through a ptr,
 * T means "Tell" directly with the argument value
 * G means "Get": reply by setting through a pointer
 * Q means "Query": response is on the return value
 * X means "eXchange": switch G and S atomically
 * H means "sHift": switch T and Q atomically
 */
#define SCULL_IOCSQUANTUM _IOW(SCULL_IOC_MAGIC, SCULL_IOCSQUANTUM_IDX, int)
#define SCULL_IOCSQSET    _IOW(SCULL_IOC_MAGIC, SCULL_IOCSQSET_IDX, int)
#define SCULL_IOCTQUANTUM _IO(SCULL_IOC_MAGIC,  SCULL_IOCTQUANTUM_IDX)
#define SCULL_IOCTQSET    _IO(SCULL_IOC_MAGIC,  SCULL_IOCTQSET_IDX)
#define SCULL_IOCGQUANTUM _IOR(SCULL_IOC_MAGIC, SCULL_IOCGQUANTUM_IDX, int)
#define SCULL_IOCGQSET    _IOR(SCULL_IOC_MAGIC, SCULL_IOCGQSET_IDX, int)
#define SCULL_IOCQQUANTUM _IO(SCULL_IOC_MAGIC,  SCULL_IOCQQUANTUM_IDX)
#define SCULL_IOCQQSET    _IO(SCULL_IOC_MAGIC,  SCULL_IOCQQSET_IDX)
#define SCULL_IOCXQUANTUM _IOWR(SCULL_IOC_MAGIC,SCULL_IOCXQUANTUM_IDX, int)
#define SCULL_IOCXQSET    _IOWR(SCULL_IOC_MAGIC,SCULL_IOCXQSET_IDX, int)
#define SCULL_IOCHQUANTUM _IO(SCULL_IOC_MAGIC,  SCULL_IOCHQUANTUM_IDX)
#define SCULL_IOCHQSET    _IO(SCULL_IOC_MAGIC,  SCULL_IOCHQSET_IDX)
